Mongoose is an ODM (Object Document Mapper). Using an ODM, we can map these simple documents (table rows) into full-form Javascript objects.

Mongo is NoSql Database .

If you doesn't want to use any MAPPER for your data models then you can also use native driver mongo.js https://github.com/mongodb/node-mongodb-native.

Mongoose is one of the orm's who give us functionality to access the mongo data with easily understandable queries.

Mongoose plays as a role of abstraction over your database model.




===============================schema=============================== 
Everything in Mongoose starts with a Schema. Each schema maps to a MongoDB collection and defines the shape of the documents within that collection.


===============================model===============================
Models are fancy constructors compiled from our Schema definitions. Instances of these models represent documents which can be saved and retrieved from our database. All document creation and retrieval from the database is handled by these models.

var schema = new mongoose.Schema({ name: 'string', size: 'string' });
var Tank = mongoose.model('Tank', schema);

The first argument is the singular name of the collection your model is for. Mongoose automatically looks for the plural version of your model name. Thus, for the example above, the model Tank is for the tanks collection (tanks table) in the database. The .model() function makes a copy of schema. Make sure that you've added everything you want to schema before calling .model()!



